searchState.loadedDescShard("ratatui", 0, "Demo\n<code>CompletedFrame</code> represents the state of the terminal after …\nA type alias for the default terminal type.\nThe viewport is drawn in a fixed area of the terminal. The …\nA consistent view into the terminal state for rendering a …\nThe viewport is fullscreen\nThe viewport is inline with the rest of the terminal.\nAn interface to interact and draw <code>Frame</code>s on the user’s …\nOptions to pass to <code>Terminal::with_options</code>\nRepresents the viewport of the terminal. The viewport is …\nThe area of the current frame\nThe size of the last frame.\nAssert that two buffers are equal by comparing their areas …\nQueries the backend for size and resizes if it doesn’t …\nThis module provides the backend implementations for …\nGets the backend\nGets the backend as a mutable reference\nA module for the <code>Buffer</code> and <code>Cell</code> types.\nThe buffer that was used to draw the last frame.\nGets the buffer that this <code>Frame</code> draws into as a mutable …\nClear the terminal and force a full redraw on the next …\nReturns the current frame count.\nThe frame count indicating the sequence number of this …\nre-export the <code>crossterm</code> crate so that users don’t have …\nGets the current buffer as a mutable reference.\nDraws a single frame to the terminal.\nObtains a difference between the previous and the current …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the current cursor position.\nGets the current cursor position.\nGet a Frame object which provides a consistent view into …\nHides the cursor.\nInitialize a terminal with reasonable defaults for most …\nInitialize a terminal with the given options and …\nInsert some content before the current inline viewport. …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Terminal</code> with the given <code>Backend</code> with a full …\nA prelude for conveniently writing applications using this …\nRender a <code>StatefulWidget</code> to the current buffer using …\nRender a <code>Widget</code> to the current buffer using <code>Widget::render</code>.\nUpdates the Terminal so that internal buffers match the …\nRestores the terminal to its original state.\nAfter drawing this frame, make the cursor visible and put …\nSets the cursor position.\nAfter drawing this frame, make the cursor visible and put …\nSets the cursor position.\nShows the cursor.\nThe area of the current frame\nQueries the real size of the backend.\n<code>style</code> contains the primitives used to control how your …\nClears the inactive buffer and swaps it with the current …\nPrimitives for styled text.\nTries to draw a single frame to the terminal.\nTry to initialize a terminal using reasonable defaults for …\nTry to initialize a terminal with the given options and …\nRestore the terminal to its original state.\nViewport used to draw to the terminal\n<code>widgets</code> is a collection of types that implement <code>Widget</code> or …\nCreates a new <code>Terminal</code> with the given <code>Backend</code> and …\nClear everything after the cursor.\nClear the entire screen.\nThe <code>Backend</code> trait provides an abstraction over different …\nClear everything before the cursor.\nEnum representing the different types of clearing …\nA <code>Backend</code> implementation that uses Crossterm to render to …\nClear the current line.\nA <code>Backend</code> implementation used for integration testing that …\nClear everything from the cursor until the next newline.\nThe window size in characters (columns / rows) as well as …\nInsert <code>n</code> line breaks to the terminal screen.\nInserts n line breaks at the current cursor position.\nAsserts that the <code>TestBackend</code>’s buffer is equal to the …\nAsserts that the <code>TestBackend</code>’s buffer is equal to the …\nAsserts that the <code>TestBackend</code>’s cursor position is equal …\nAsserts that the <code>TestBackend</code>’s scrollback buffer is …\nAsserts that the <code>TestBackend</code>’s scrollback buffer is …\nAsserts that the <code>TestBackend</code>’s scrollback buffer is …\nReturns a reference to the internal buffer of the …\nClears the whole terminal screen\nClears a specific region of the terminal specified by the …\nSize of the window in characters (columns / rows).\nDraw the given content to the terminal screen.\nExecutes the given command directly.\nFlush any buffered content to the terminal screen.\nFlushes the underlying buffer.\nFormats the <code>TestBackend</code> for display by calling the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the current cursor position on the terminal screen.\nGet the current cursor position on the terminal screen.\nHide the cursor on the terminal screen.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>CrosstermBackend</code> with the given writer.\nCreates a new <code>TestBackend</code> with the specified width and …\nSize of the window in pixels.\nQueues the given command for further execution.\nResizes the <code>TestBackend</code> to the specified width and height.\nReturns a reference to the internal scrollback buffer of …\nSet the cursor position on the terminal screen to the …\nSet the cursor position on the terminal screen to the …\nShow the cursor on the terminal screen.\nGet the size of the terminal screen in columns/rows as a …\nPerforms a set of actions within a synchronous update.\nGet the size of the terminal screen in columns/rows and …\nCreates a new <code>TestBackend</code> with the specified lines as the …\nWrites a buffer of bytes to the underlying buffer.\nA buffer that maps to the desired content of the terminal …\nA buffer cell\nAn empty <code>Cell</code>\nReturns the area covered by this buffer\nThe area represented by this buffer\nThe background color of the cell.\nReturns a reference to the <code>Cell</code> at the given position or …\nReturns a mutable reference to the <code>Cell</code> at the given …\nReturns the content of the buffer as a slice\nThe content of the buffer. The length of this Vec should …\nBuilds a minimal sequence of coordinates and Cells …\nReturns a Buffer with all cells set to the default one\nThe foreground color of the cell.\nReturns a Buffer with all cells initialized with the …\nWrites a debug representation of the buffer to the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a reference to the <code>Cell</code> at the given coordinates\nReturns a mutable reference to the <code>Cell</code> at the given …\nReturns a reference to the <code>Cell</code> at the given position.\nReturns a mutable reference to the <code>Cell</code> at the given …\nReturns the index in the <code>Vec&lt;Cell&gt;</code> for the given global …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMerge an other buffer into this one\nThe modifier of the cell.\nCreates a new <code>Cell</code> with the given symbol.\nReturns the (global) coordinates of a cell given its index\nReset all cells in the buffer\nResets the cell to the empty state.\nResize the buffer so that the mapped area matches the …\nSets the background color of the cell.\nSets the symbol of the cell to a single character.\nSets the foreground color of the cell.\nPrint a line, starting at the position (x, y)\nSets the cell to be skipped when copying (diffing) the …\nPrint a span, starting at the position (x, y)\nPrint a string, starting at the position (x, y)\nPrint at most the first n characters of a string if enough …\nSet the style of all cells in the given area.\nSets the style of the cell.\nSets the symbol of the cell.\nWhether the cell should be skipped when copying (diffing) …\nReturns the style of the cell.\nGets the symbol of the cell.\nThe underline color of the cell.\nReturns a Buffer containing the given lines\nCenters items within the container.\nAn iterator over columns within a <code>Rect</code>.\nA constraint that defines the size of a layout element.\nThis is a somewhat arbitrary size for the layout cache …\nAligns items to the end of the container.\nApplies the scaling factor proportional to all other …\nDefines the options for layout flex justify content in a …\nA layout is a set of constraints that can be applied to a …\nFills the available space within the container, putting …\nApplies a length constraint to the element\nApplies a maximum size constraint to the element\nApplies a minimum size constraint to the element\nPosition at the origin, the top left edge at 0,0\nAmounts by which to move a <code>Rect</code>.\nApplies a percentage of the available space to the element\nPosition in the terminal\nAn iterator over positions within a <code>Rect</code>.\nApplies a ratio of the available space to the element\nA Rectangular area.\nAn iterator over rows within a <code>Rect</code>.\nA simple size struct\nAdds excess space around each element.\nAdds excess space between each element.\nRepresents the spacing between segments in a layout.\nAligns items to the start of the container.\nA zero sized Rect at position 0,0\nA zero sized Size\nThe area of the <code>Rect</code>. If the area is larger than the …\nSplit the rect into a number of sub-rects according to the …\nReturns a <code>Position</code> with the same coordinates as this <code>Rect</code>.\nConverts the <code>Rect</code> into a size struct.\nReturns the bottom coordinate of the <code>Rect</code>. This is the …\nClamp this <code>Rect</code> to fit inside the other <code>Rect</code>.\nAn iterator over columns within the <code>Rect</code>.\nSets the constraints of the layout.\nReturns true if the given position is inside the <code>Rect</code>.\nSet the direction of the layout.\nThe <code>flex</code> method  allows you to specify the flex behavior …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert a <code>u16</code> into a <code>Constraint::Length</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert an iterator of proportional factors into a vector …\nConvert an iterator of lengths into a vector of constraints\nConvert an iterator of maxes into a vector of constraints\nConvert an iterator of mins into a vector of constraints\nConvert an iterator of percentages into a vector of …\nConvert an iterator of ratios into a vector of constraints\nThe height of the <code>Rect</code>.\nThe height in rows\nCreates a new horizontal layout with default values.\nSet the horizontal margin of the layout.\nInitialize an empty cache with a custom size. The cache is …\nReturns a new <code>Rect</code> inside the current one, with the given …\nReturns a new <code>Rect</code> that is the intersection of the current …\nReturns true if the two <code>Rect</code>s intersect.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the enum is Flex::Center otherwise false\nReturns true if the <code>Rect</code> has no area.\nReturns true if the enum is Flex::End otherwise false\nReturns true if the enum is Constraint::Fill otherwise …\nReturns true if the enum is Flex::Legacy otherwise false\nReturns true if the enum is Constraint::Length otherwise …\nReturns true if the enum is Constraint::Max otherwise false\nReturns true if the enum is Constraint::Min otherwise false\nReturns true if the enum is Constraint::Percentage …\nReturns true if the enum is Constraint::Ratio otherwise …\nReturns true if the enum is Flex::SpaceAround otherwise …\nReturns true if the enum is Flex::SpaceBetween otherwise …\nReturns true if the enum is Flex::Start otherwise false\nReturns the left coordinate of the <code>Rect</code>.\nSet the margin of the layout.\nCreates a new <code>Rows</code> iterator.\nCreates a new <code>Columns</code> iterator.\nCreates a new <code>Positions</code> iterator.\nCreates a new layout with default values.\nCreate a new position\nCreates a new <code>Rect</code>, with width and height limited to keep …\nCreate a new <code>Size</code> struct\nRetrieves the next row within the <code>Rect</code>.\nRetrieves the next column within the <code>Rect</code>.\nRetrieves the next position within the <code>Rect</code>.\nRetrieves the previous row within the <code>Rect</code>.\nRetrieves the previous column within the <code>Rect</code>.\nMoves the <code>Rect</code> without modifying its size.\nAn iterator over the positions within the <code>Rect</code>.\nReturns the right coordinate of the <code>Rect</code>. This is the …\nAn iterator over rows within the <code>Rect</code>.\nSplit the rect into a number of sub-rects according to the …\nSets the spacing between items in the layout.\nWrapper function around the cassowary-rs solver to be able …\nWrapper function around the cassowary-rs solver that …\nReturns the top coordinate of the <code>Rect</code>.\nReturns a new <code>Rect</code> that contains both the current one and …\nCreates a new vertical layout with default values.\nSet the vertical margin of the layout.\nThe width of the <code>Rect</code>.\nThe width in columns\nThe x coordinate of the position\nThe x coordinate of the top left corner of the <code>Rect</code>.\nHow much to move on the X axis\nThe y coordinate of the position\nThe y coordinate of the top left corner of the <code>Rect</code>.\nHow much to move on the Y axis\nANSI Color: Black. Foreground: 30, Background: 40\nANSI Color: Blue. Foreground: 34, Background: 44\nANSI Color\nANSI Color: Cyan. Foreground: 36, Background: 46\nANSI Color: Bright Black. Foreground: 90, Background: 100\nANSI Color: White. Foreground: 37, Background: 47\nANSI Color: Green. Foreground: 32, Background: 42\nAn 8-bit 256 color.\nANSI Color: Bright Blue. Foreground: 94, Background: 104\nANSI Color: Bright Cyan. Foreground: 96, Background: 106\nANSI Color: Bright Green. Foreground: 92, Background: 102\nANSI Color: Bright Magenta. Foreground: 95, Background: 105\nANSI Color: Bright Red. Foreground: 91, Background: 101\nANSI Color: Bright Yellow. Foreground: 93, Background: 103\nANSI Color: Magenta. Foreground: 35, Background: 45\nModifier changes the way a piece of text is displayed.\nError type indicating a failure to parse a color string.\nANSI Color: Red. Foreground: 31, Background: 41\nResets the foreground or background color\nAn RGB color.\nStyle lets you control the main characteristics of the …\nA trait for objects that have a <code>Style</code>.\nAn extension trait for styling objects.\nANSI Color: Bright White. Foreground: 97, Background: 107 …\nANSI Color: Yellow. Foreground: 33, Background: 43\nChanges the text emphasis.\nGet a flags value with all known bits set.\nChanges the background color.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nSets the foreground color to <code>black</code>.\nSets the foreground color to <code>black</code>.\nSets the foreground color to <code>blue</code>.\nSets the foreground color to <code>blue</code>.\nAdds the <code>BOLD</code> modifier.\nAdds the <code>BOLD</code> modifier.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nAdds the <code>CROSSED_OUT</code> modifier.\nAdds the <code>CROSSED_OUT</code> modifier.\nSets the foreground color to <code>cyan</code>.\nSets the foreground color to <code>cyan</code>.\nSets the foreground color to <code>dark_gray</code>.\nSets the foreground color to <code>dark_gray</code>.\nThe intersection of a source flags value with the …\nAdds the <code>DIM</code> modifier.\nAdds the <code>DIM</code> modifier.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nChanges the foreground color.\nFormat the modifier as <code>NONE</code> if the modifier is empty or as …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>Style</code> with the given foreground color.\nReturns the argument unchanged.\nCreates a new <code>Style</code> with the given foreground and …\nCreates a new <code>Style</code> with the given foreground and …\nCreates a new <code>Style</code> with the given foreground color and …\nCreates a new <code>Style</code> with the given modifiers added and …\nCreates a new <code>Style</code> with the given modifier added.\nCreates a new <code>Style</code> with the given foreground and …\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nConvert a u32 to a Color\nSets the foreground color to <code>gray</code>.\nSets the foreground color to <code>gray</code>.\nSets the foreground color to <code>green</code>.\nSets the foreground color to <code>green</code>.\nAdds the <code>HIDDEN</code> modifier.\nAdds the <code>HIDDEN</code> modifier.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nAdds the <code>ITALIC</code> modifier.\nAdds the <code>ITALIC</code> modifier.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nSets the foreground color to <code>light_blue</code>.\nSets the foreground color to <code>light_blue</code>.\nSets the foreground color to <code>light_cyan</code>.\nSets the foreground color to <code>light_cyan</code>.\nSets the foreground color to <code>light_green</code>.\nSets the foreground color to <code>light_green</code>.\nSets the foreground color to <code>light_magenta</code>.\nSets the foreground color to <code>light_magenta</code>.\nSets the foreground color to <code>light_red</code>.\nSets the foreground color to <code>light_red</code>.\nSets the foreground color to <code>light_yellow</code>.\nSets the foreground color to <code>light_yellow</code>.\nSets the foreground color to <code>magenta</code>.\nSets the foreground color to <code>magenta</code>.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nRemoves the <code>BOLD</code> modifier.\nRemoves the <code>BOLD</code> modifier.\nRemoves the <code>CROSSED_OUT</code> modifier.\nRemoves the <code>CROSSED_OUT</code> modifier.\nRemoves the <code>DIM</code> modifier.\nRemoves the <code>DIM</code> modifier.\nRemoves the <code>HIDDEN</code> modifier.\nRemoves the <code>HIDDEN</code> modifier.\nRemoves the <code>ITALIC</code> modifier.\nRemoves the <code>ITALIC</code> modifier.\nRemoves the <code>RAPID_BLINK</code> modifier.\nRemoves the <code>RAPID_BLINK</code> modifier.\nRemoves the <code>REVERSED</code> modifier.\nRemoves the <code>REVERSED</code> modifier.\nRemoves the <code>SLOW_BLINK</code> modifier.\nRemoves the <code>SLOW_BLINK</code> modifier.\nRemoves the <code>UNDERLINED</code> modifier.\nRemoves the <code>UNDERLINED</code> modifier.\nSets the background color to <code>black</code>.\nSets the background color to <code>black</code>.\nSets the background color to <code>blue</code>.\nSets the background color to <code>blue</code>.\nSets the background color to <code>cyan</code>.\nSets the background color to <code>cyan</code>.\nSets the background color to <code>dark_gray</code>.\nSets the background color to <code>dark_gray</code>.\nSets the background color to <code>gray</code>.\nSets the background color to <code>gray</code>.\nSets the background color to <code>green</code>.\nSets the background color to <code>green</code>.\nSets the background color to <code>light_blue</code>.\nSets the background color to <code>light_blue</code>.\nSets the background color to <code>light_cyan</code>.\nSets the background color to <code>light_cyan</code>.\nSets the background color to <code>light_green</code>.\nSets the background color to <code>light_green</code>.\nSets the background color to <code>light_magenta</code>.\nSets the background color to <code>light_magenta</code>.\nSets the background color to <code>light_red</code>.\nSets the background color to <code>light_red</code>.\nSets the background color to <code>light_yellow</code>.\nSets the background color to <code>light_yellow</code>.\nSets the background color to <code>magenta</code>.\nSets the background color to <code>magenta</code>.\nSets the background color to <code>red</code>.\nSets the background color to <code>red</code>.\nSets the background color to <code>white</code>.\nSets the background color to <code>white</code>.\nSets the background color to <code>yellow</code>.\nSets the background color to <code>yellow</code>.\nA module for defining color palettes.\nResults in a combined style that is equivalent to applying …\nAdds the <code>RAPID_BLINK</code> modifier.\nAdds the <code>RAPID_BLINK</code> modifier.\nSets the foreground color to <code>red</code>.\nSets the foreground color to <code>red</code>.\nThe intersection of a source flags value with the …\nChanges the text emphasis.\nReturns a <code>Style</code> resetting all properties.\nAdds the <code>REVERSED</code> modifier.\nAdds the <code>REVERSED</code> modifier.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSets the style of the object.\nAdds the <code>SLOW_BLINK</code> modifier.\nAdds the <code>SLOW_BLINK</code> modifier.\nReturns the style of the object.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nChanges the underline color. The text must be underlined …\nAdds the <code>UNDERLINED</code> modifier.\nAdds the <code>UNDERLINED</code> modifier.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nSets the foreground color to <code>white</code>.\nSets the foreground color to <code>white</code>.\nSets the foreground color to <code>yellow</code>.\nSets the foreground color to <code>yellow</code>.\nMaterial design color palettes.\nRepresents the Tailwind CSS default color palette.\nA palette of colors for use in Material design with accent …\nA palette of colors for use in Material design without …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>AccentedPalette</code> from the given variants\nCreate a new <code>NonAccented</code> from the given variants\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nOne point per cell in the shape of a bar (<code>▄</code>)\nOne point per cell in shape of a block (<code>█</code>)\nUse the Unicode Braille Patterns block to represent data …\nOne point per cell in shape of dot (<code>•</code>)\nUse the unicode block and half block characters (<code>█</code>, <code>▄</code>, …\nMarker to use when plotting data points\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBorder Set with a double line width\nEmpty border set\nSolid border set\nTall border set based on McGugan box technique\nWide border set based on McGugan box technique\nBorder Set with a single line width\nTall proportional (visually equal width and height) border …\nWide proportional (visually equal width and height) border …\nQuadrant used for setting a border inside a block by one …\nQuadrant used for setting a border outside a block by one …\nBorder Set with a single line width and rounded corners\nBorder Set with a thick line width\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nScrollbar Set\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA line of text, consisting of one or more <code>Span</code>s.\nA wrapper around a string that is masked when displayed.\nRepresents a part of a line that is contiguous and where …\nA grapheme associated to a style. Note that, although …\nA string split over one or more lines.\nA trait for converting a value to a <code>Line</code>.\nA trait for converting a value to a <code>Span</code>.\nA trait for converting a value to a <code>Text</code>.\nSets the target alignment for this line of text.\nSets the alignment for this text.\nThe alignment of this line of text.\nThe alignment of this text.\nCenter-aligns this line of text.\nCenter-aligns the whole text.\nSets the content of the span.\nThe content of the span as a Clone-on-write string.\nDebug representation of a masked string is the underlying …\nDisplay representation of a masked string is the masked …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the height.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this Span into a center-aligned <code>Line</code>\nConverts this Span into a left-aligned <code>Line</code>\nConverts this Span into a right-aligned <code>Line</code>\nReturns an iterator over the spans of this line.\nReturns an iterator over the lines of the text.\nReturns a mutable iterator over the spans of this line.\nReturns an iterator that allows modifying each line.\nLeft-aligns this line of text.\nLeft-aligns the whole text.\nThe lines that make up this piece of text.\nThe character to use for masking.\nCreates a new <code>StyledGrapheme</code> with the given symbol and …\nPatches the style of this Line, adding modifiers from the …\nPatches the style of the Span, adding modifiers from the …\nPatches the style of this Text, adding modifiers from the …\nAdds a line to the text.\nAdds a span to the line.\nAdds a span to the last line of the text.\nCreate a line with the default style.\nCreate a span with the default style.\nCreate some text (potentially multiple lines) with no …\nResets the style of this Line.\nResets the style of the Span.\nResets the style of the Text.\nRight-aligns this line of text.\nRight-aligns the whole text.\nSets the spans of this line of text.\nThe spans that make up this line of text.\nSets the style of this line of text.\nSets the style of the span.\nSets the style of this text.\nThe style of this line of text.\nThe style of the span.\nThe style of this text.\nCreate a line with the given style.\nCreate a span with the specified style.\nCreate some text (potentially multiple lines) with a style.\nReturns an iterator over the graphemes held by this line.\nReturns an iterator over the graphemes held by this span.\nConverts the value to a <code>Line</code>.\nConverts the value to a <code>Span</code>.\nConverts the value to a <code>Text</code>.\nThe underlying string, with all characters masked.\nReturns the width of the underlying string.\nReturns the unicode width of the content held by this span.\nReturns the max width of all the lines.\nShow all borders\nAlways add spacing for the selection symbol column\nAn X or Y axis for the <code>Chart</code> widget\nShow the bottom border\nBackward scroll direction, usually corresponds to …\nA bar to be shown by the <code>BarChart</code> widget.\nDraw a bar chart. This will draw a bar for each point in …\nA chart showing values as bars.\nA group of bars to be shown by the Barchart.\nBitflags that can be composed to set the visible borders …\nLegend is centered on the bottom\nLegend is in the bottom-left corner\nLegend is in the bottom-right corner\nThe first value is on the bottom, going to the top.\nA <code>Cell</code> contains the <code>Text</code> to be displayed in a <code>Row</code> of a …\nA widget to plot one or more <code>Dataset</code> in a cartesian …\nA widget to clear/reset a certain area to allow …\nA group of data points\nForward scroll direction, usually corresponds to scrolling …\nA widget to display a progress bar.\nUsed to determine which style of graphing to use\nThis option allows the user to configure the “highlight …\nPositions the scrollbar on the bottom, scrolling …\nPositions the scrollbar on the top, scrolling horizontally\nShow the left border\nLegend is centered on the left\nThe first value is on the left, going to the right\nAllow users to specify the position of a legend in a <code>Chart</code>\nDraw a line between each following point.\nA compact widget to display a progress bar over a single …\nA widget to display several items among which one can be …\nDefines the direction in which the list will be rendered.\nA single item in a <code>List</code>\nState of the <code>List</code> widget\nShow no border (default)\nNever add spacing to the selection symbol column, …\nA widget to display some text.\nShow the right border\nA widget that renders the Ratatui logo\nThe size of the logo\nDefines the direction in which sparkline will be rendered.\nLegend is centered on the right\nThe first value is on the right, going to the left\nA single row of data to be displayed in a <code>Table</code> widget.\nDraw each point. This is the default.\nAn enum representing a scrolling direction.\nA widget to display a scrollbar\nThis is the position of the scrollbar around a given area.\nA struct representing the state of a Scrollbar widget.\nA small logo\nWidget to render a sparkline over one or more lines.\nAn bar in a <code>Sparkline</code>.\nState associated with the stateful widget.\nA <code>StatefulWidget</code> is a widget that can take advantage of …\nShow the top border\nA widget to display data in formatted columns.\nState of a <code>Table</code> widget\nA widget that displays a horizontal set of Tabs with a …\nA tiny logo\nLegend is centered on top\nLegend is in the top-left corner\nLegend is in the top-right corner. This is the <strong>default</strong>.\nThe first value is on the top, going to the bottom\nPositions the scrollbar on the left, scrolling vertically\nPositions the scrollbar on the right, scrolling vertically\nOnly add spacing for the selection symbol column if a row …\nA <code>Widget</code> is a type that can be drawn on a <code>Buffer</code> in a …\nDescribes how to wrap text across lines.\nSets the style to use for absent values.\nSets the symbol to use for absent values.\nSet the text alignment for the given paragraph\nGet a flags value with all known bits set.\nSet the gap between each bar.\nThe <code>bar::Set</code> to use for displaying the bars.\nSets the characters used to display the bars.\nSet the default style of the bar.\nSet the width of the displayed bars.\nSet the bars of the group to be shown\nSets the style that is used for the beginning of the …\nSets the symbol that represents the beginning of the …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nElements related to the <code>Block</code> base widget.\nSurround the <code>BarChart</code> with a <code>Block</code>.\nWraps the chart with the given <code>Block</code>\nSurrounds the <code>Gauge</code> with a <code>Block</code>.\nSurrounds the <code>LineGauge</code> with a <code>Block</code>.\nWraps the list with a custom <code>Block</code> widget.\nSurrounds the <code>Paragraph</code> widget with a <code>Block</code>.\nWraps the sparkline with the given <code>block</code>.\nWraps the table with a custom <code>Block</code> widget.\nSurrounds the <code>Tabs</code> with a <code>Block</code>.\nSet the bottom margin. By default, the bottom margin is <code>0</code>.\nSets the bounds of this axis\nA <code>Canvas</code> and a collection of <code>Shape</code>s.\nSet the style of the selected cell\nSet the cells of the <code>Row</code>\nCenter-aligns the text in the given paragraph.\nSet the style of the selected column\nSet the spacing between columns\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nSet the content of the <code>Cell</code>\nSets the length of the scrollable content.\nAdd group of bars to the <code>BarChart</code>\nSets the data points of this dataset\nSets the dataset for the sparkline.\nReturns a default <code>Tabs</code> widget.\nThe intersection of a source flags value with the …\nSet the direction of the bars.\nDefines the list direction (up or down)\nSets the direction of the sparkline.\nSets the string to use as tab divider.\nGet a flags value with all bits unset.\nSets the style that is used for the end of the scrollbar.\nSets the symbol that represents the end of the scrollbar.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nSets the style of filled part of the bar.\nSets the scroll position to the start of the scrollable …\nSet how extra space is distributed amongst columns.\nDisplay the Borders bitflags as a list of names. For …\nSets the footer row\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nCollects an iterator of rows into a table.\nGet a flags value with the bits of a flag with the given …\nSets the style of the bar.\nSets the style of the bar.\nSets how the dataset should be drawn\nSet the gap between <code>BarGroup</code>.\nSets the header row\nReturns the item height\nSet the fixed height of the <code>Row</code>\nSets the constraints used to determine whether the legend …\nSet when to show the highlight spacing\nSet when to show the highlight spacing\nSet the style of the selected item\nSet the style of the selected row\nSets the style for the highlighted tab.\nSet the symbol to be displayed in front of the selected …\nSet the symbol to be displayed in front of the selected row\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nReturns true if the list contains no elements.\nReturns <code>true</code> if the scrollbar is horizontal.\nReturns <code>true</code> if the scrollbar is vertical.\nSet the items\nYield a set of contained flags values.\nYield a set of contained named flags values.\nSet the label of the bar.\nSet the group label\nSets the label to display in the center of the bar.\nSets the label to display.\nSet the default label style of the groups and bars.\nSets the axis labels\nSets the labels alignment of the axis\nSets the scroll position to the end of the scrollable …\nLeft-aligns the text in the given paragraph.\nSets the position of a legend or hide it\nReturns the number of <code>ListItem</code>s in the list\nSets the characters to use for the line.\nSets the kind of character to use to display this dataset\nSet the value necessary for a <code>Bar</code> to reach the maximum …\nSets the maximum value of bars.\nSets the name of the dataset\nCreates a chart with the given datasets\nCreates a new <code>ListItem</code>\nCreates a new list from <code>ListItem</code>s\nCreate a new Ratatui logo widget\nCreates a new <code>Paragraph</code> widget with the given text.\nCreates a new scrollbar with the given orientation.\nConstructs a new <code>ScrollbarState</code> with the specified content …\nCreates a new <code>Cell</code>\nCreates a new <code>Row</code>\nCreates a new <code>Table</code> widget with the given rows.\nCreates a new <code>TableState</code>\nCreates new <code>Tabs</code> from their titles.\nIncrements the scroll position by one, ensuring it doesn’…\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nIndex of the first item to be displayed\nIndex of the first row to be displayed\nMutable reference to the index of the first item to be …\nMutable reference to the index of the first row to be …\nSets the position of the scrollbar.\nSets the orientation and symbols for the scrollbar from a …\nSets the padding between tabs.\nSets the left side padding between tabs.\nSets the right side padding between tabs.\nSets the bar progression from a percentage.\nSets the scroll position of the scrollbar.\nDecrements the scroll position by one, ensuring it doesn’…\nSets the bar progression from a ratio (float).\nSets the bar progression from a ratio (float).\nThe intersection of a source flags value with the …\nDraws the current state of the widget in the given buffer. …\nDraws the current state of the widget in the given buffer. …\nSet whether to repeat the highlight symbol and style over …\nRight-aligns the text in the given paragraph.\nSet the style of the selected row\nSet the rows\nSet the scroll offset for the given paragraph\nChanges the scroll position based on the provided …\nScrolls down by a specified <code>amount</code> in the list.\nScrolls down by a specified <code>amount</code> in the table.\nScrolls left by a specified <code>amount</code> in the table.\nSets the number of items around the currently selected …\nScrolls right by a specified <code>amount</code> in the table.\nScrolls up by a specified <code>amount</code> in the list.\nScrolls up by a specified <code>amount</code> in the table.\nSets the index of the selected item\nSets the index of the selected row\nSets the selected tab.\nSets the indexes of the selected cell\nSets the index of the selected column\nSelects the first item\nSelects the first row\nSelects the first column\nSelects the last item\nSelects the last row\nSelects the last column\nSelects the next item or the first one if no item is …\nSelects the next row or the first one if no row is selected\nSelects the next column or the first one if no column is …\nSelects the previous item or the last one if no item is …\nSelects the previous row or the last one if no item is …\nSelects the previous column or the last one if no column …\nIndex of the selected item\nIndex of the selected row\nIndexes of the selected cell\nIndex of the selected column\nMutable reference to the index of the selected column\nMutable reference to the index of the selected item\nMutable reference to the index of the selected row\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSet the size of the logo\nCreate a new Ratatui logo widget with a small size\nSet the style of the bar.\nSet the style of the entire chart.\nSets the axis style\nSets the style of this dataset\nSets the style of the entire chart\nSets the widget style.\nSets the widget style.\nSets the item style\nSets the base style of the widget\nSets the style of the entire widget.\nSets the style used for the various parts of the scrollbar …\nSets the style of the entire widget.\nSets the style of the bar.\nSet the <code>Style</code> of this cell\nSet the <code>Style</code> of the entire row\nSets the base style of the widget\nSets the style of the tabs.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nSets the symbols used for the various parts of the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nSet the text value printed in the bar.\nSets the style on the scrollbar thumb.\nSets the symbol that represents the thumb of the scrollbar.\nCreate a new Ratatui logo widget with a tiny size\nSets the axis title\nSets the titles of the tabs.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nSet the top margin. By default, the top margin is <code>0</code>.\nSets the style that is used for the track of the scrollbar.\nSets the symbol that represents the track of the scrollbar.\nShould leading whitespace be trimmed\nSets the style of the unfilled part of the bar.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nSets whether to use unicode characters to display the …\nSet the value of this bar.\nSet the style of the value.\nSet the default value style of the bar.\nSets the items’ size.\nReturns the max width of all the lines\nSet the widths of the columns.\nSets the index of the first item to be displayed\nSets the index of the first row to be displayed\nSets the index of the selected item\nSets the index of the selected row\nSets the indexes of the selected cell\nSets the index of the selected column\nSets the wrapping configuration for the widget.\nSets the X <code>Axis</code>\nSets the Y <code>Axis</code>\nBase widget to be used to display a box border around all …\nAn extension trait for <code>Block</code> that provides some …\nThe type of border of a <code>Block</code>.\nA doubled border.\nDefines the padding for a <code>Block</code>.\nA plain, simple border.\nA border with a single line on the inside of a half block.\nA border with a single line on the outside of a half block.\nA plain border with rounded corners.\nA thick border.\n<code>Padding</code> with all fields set to <code>0</code>\nSets the symbols used to display the border as a …\nDefines the style of the borders.\nConvert this <code>BorderType</code> into the corresponding <code>Set</code> of …\nSets the symbols used to display the border (e.g. single …\nCreate a new block with all borders shown\nDefines which borders to display.\nCreates a <code>Padding</code> that only sets the <code>bottom</code> padding.\nBottom padding\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>Padding</code> with the same value for <code>left</code> and <code>right</code>.\nCompute the inner area of a block based on its border …\nReturn the inner area of the block if it is <code>Some</code>. …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a <code>Padding</code> that only sets the <code>left</code> padding.\nLeft padding\nCreates a new <code>Padding</code> by specifying every field …\nCreates a new block with no <code>Borders</code> or <code>Padding</code>.\nDefines the padding inside a <code>Block</code>.\nCreates a <code>Padding</code> that is visually proportional to the …\nCreates a <code>Padding</code> that only sets the <code>right</code> padding.\nRight padding\nDefines the style of the entire block.\nCreates a <code>Padding</code> that is symmetric.\nThis module holds the <code>Title</code> element and its related …\nAdds a title to the block.\nSets the default <code>Alignment</code> for all block titles.\nAdds a title to the bottom of the block.\nSets the default <code>Position</code> for all block titles.\nApplies the style to all titles.\nAdds a title to the top of the block.\nConvert this <code>BorderType</code> into the corresponding <code>Set</code> of …\nCreates a <code>Padding</code> that only sets the <code>top</code> padding.\nTop padding\nCreates a <code>Padding</code> with the same value for all fields.\nCreates a <code>Padding</code> with the same value for <code>top</code> and <code>bottom</code>.\nCreates a <code>Padding</code> with all fields set to <code>0</code>.\nPosition the title at the bottom of the block.\nDefines the title position.\nA <code>Block</code> title.\nPosition the title at the top of the block.\nSet the title alignment.\nTitle alignment\nSet the title content.\nTitle content\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the title position.\nTitle position\nThe Canvas widget provides a means to draw shapes (Lines, …\nA circle with a given center and radius and with a given …\nHolds the state of the <code>Canvas</code> when painting to it.\nA higher resolution for the <code>Map</code> <code>Shape</code>.\nLabel to draw some text on the canvas\nA line from <code>(x1, y1)</code> to <code>(x2, y2)</code> with the given color\nA lesser resolution for the <code>Map</code> <code>Shape</code>.\nA world map\nDefines how many points are going to be used to draw a <code>Map</code>.\nPainter is an abstraction over the <code>Context</code> that allows to …\nA group of points with a given color\nA rectangle to draw on a <code>Canvas</code>\nSomething that can be drawn on a <code>Canvas</code>.\nChange the background <code>Color</code> of the entire canvas\nWraps the canvas with a custom <code>Block</code> widget.\nColor of the circle\nColor of the line\nMap color\nColor of the points\nThe color of the rectangle.\nList of points to draw\nDraws this <code>Shape</code> using the given <code>Painter</code>.\nDraw the given <code>Shape</code> in this context\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert the <code>(x, y)</code> coordinates to location of a point on …\nThe height of the rectangle.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSave the existing state of the grid as a layer.\nChange the type of points used to draw the shapes.\nCreate a new line from <code>(x1, y1)</code> to <code>(x2, y2)</code> with the given …\nCreate a new Context with the given width and height …\nPaint a point of the grid\nStore the closure that will be used to draw to the <code>Canvas</code>\nPrint a <code>Text</code> on the <code>Canvas</code> at the given position.\nRadius of the circle\nThe resolution of the map.\nThe width of the rectangle.\n<code>x</code> coordinate of the circle’s center\nThe <code>x</code> position of the rectangle.\n<code>x</code> of the starting point\n<code>x</code> of the ending point\nDefine the viewport of the canvas.\n<code>y</code> coordinate of the circle’s center\nThe <code>y</code> position of the rectangle.\n<code>y</code> of the starting point\n<code>y</code> of the ending point\nDefine the viewport of the canvas.")